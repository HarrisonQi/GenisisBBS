<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.withstars.dao.SysuserMapper">
  <resultMap id="BaseResultMap" type="com.withstars.domain.Sysuser">
    <id column="id" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="uname" />
  </resultMap>
 
 <select id="adminLogin" resultMap="BaseResultMap">
    select id,username from user
    where type="1"  and username = #{uname} and password=#{pwd} 
  </select>
  
  <update id="editpwd">
	update   user set password=#{newpwd} where username=#{username} and password=#{oldpwd}
  </update>
  
  <select id="getCount" parameterType="java.util.Map" resultType="int">
    select  count(*) from user  WHERE `type`!='1' 
  </select> 

<resultMap id="BaseResultMap1" type="com.withstars.domain.Sysuser">
    <id column="id" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="uname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_num" jdbcType="VARCHAR" property="phone" />
    <result column="credit" jdbcType="VARCHAR" property="credit" />
    <result column="fatie" jdbcType="VARCHAR" property="fatie" />
    <result column="huifu" jdbcType="VARCHAR" property="huifu" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
   <select id="getByPage" parameterType="java.util.Map" resultMap="BaseResultMap1">
     SELECT 
		u.username,
		u.id,
		u.`email`,
		u.`phone_num`,
		u.`credit`,
		COUNT(t.id) fatie,
		COUNT(r.id) huifu,
		u.status
	FROM `user` u
	LEFT JOIN topic t ON u.`id`=t.`user_id`
	LEFT JOIN reply r ON u.`id`=r.`reply_user_id`
	WHERE u.`type`!='1' 
	GROUP BY u.id
     <if test="pageno!=null and pageSize!=null">
     limit #{pageno},#{pageSize}
     </if>
     </select>
     
     <resultMap id="BaseResultMap111" type="com.withstars.domain.Tab" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tab_name" property="tabName" jdbcType="VARCHAR" />
    <result column="tab_name_en" property="tabNameEn" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, tab_name,tab_name_en
  </sql>

  <select id="getAllTabs" resultMap="BaseResultMap111" parameterType="java.util.Map" >
    select
    *
    from tab
    ORDER BY id ASC
    <if test="pageno!=null and pageSize!=null">
     limit #{pageno},#{pageSize}
     </if>
  </select>
  
  <select id="getCountForTab" parameterType="java.util.Map" resultType="int">
    select  count(*) from tab  
  </select> 
  
  
  <resultMap id="topicAndUserInfo" type="com.withstars.domain.Topic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="click" property="click" jdbcType="INTEGER" />
    <result column="tab_id" property="tabId" jdbcType="TINYINT" />
    <result column="count_replies" property="countReplies" jdbcType="INTEGER" />
    <result column="liang" property="liang" jdbcType="TINYINT" />
    <association property="user" javaType="com.withstars.domain.User">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="username" property="username" jdbcType="VARCHAR" />
      <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    </association>
    <association property="tab" javaType="com.withstars.domain.Tab">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="tab_name" property="tabName" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <select id="getAllTopicList" resultMap="topicAndUserInfo" parameterType="java.util.Map" >
    SELECT topic.id,topic.liang,topic.user_id,topic.create_time,topic.update_time,topic.title,topic.click,topic.tab_id,user.username,user.avatar ,
    tab.tab_name,COUNT(reply.id) AS count_replies FROM topic LEFT JOIN USER ON  topic.user_id = user.id
	LEFT JOIN tab ON tab.id=topic.tab_id LEFT JOIN reply ON topic.id=reply.topic_id
	WHERE topic.sort='0'
	GROUP BY topic.id ORDER BY topic.sort DESC,topic.id DESC
    <if test="pageno!=null and pageSize!=null">
     limit #{pageno},#{pageSize}
     </if>
  </select>
  <select id="getCountForTopic" parameterType="java.util.Map" resultType="int">
    select  count(*) from topic  
  </select>
  
  <resultMap id="replyAndUser" type="com.withstars.domain.Reply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="topic_id" property="topicId" jdbcType="INTEGER" />
    <result column="reply_user_id" property="replyUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="device" property="device" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <association property="user" javaType="com.withstars.domain.User">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="username" property="username" jdbcType="VARCHAR" />
      <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <select id="getAllReplyList" resultMap="replyAndUser" parameterType="java.util.Map" >
	    SELECT reply.*,user.username,user.avatar
	  FROM reply,USER
	  WHERE reply.reply_user_id = user.id 
	  ORDER BY create_time ASC 
    <if test="pageno!=null and pageSize!=null">
     limit #{pageno},#{pageSize}
     </if>
  </select>
  <select id="getCountForReply" parameterType="java.util.Map" resultType="int">
    select  count(*) from reply  
  </select>
  
  <update id="editUserStatus">
  	update user set status='2' where id=#{userid}
  </update>
  
  <delete id="delTopic">
  	delete from topic where id=#{id}
  </delete>
  
  <delete id="delReply">
  	delete from reply where id=#{id}
  </delete>
     
  
</mapper>